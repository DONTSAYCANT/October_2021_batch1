October 12:

Rules for creating veriables in python (4 to 5 rules)

October 13:

Task1:

Difference btwn Compiler and Interpreter

Task2:

Difference between python2 and python3

Task3:

#Area circle ==> pi *(r * r)
#perimater of circle ===> 2 * pi * r

r = 10
pi = 3.14

print output and type of output


Task4:

create a integer ==> try convert to float/bool/string
create a Float ==> try convert to Int/bool/string
create a bool ==> try convert to float/int/string
create a string ==> try convert to Int/bool/float


October 14:

Task1 :

simple interest p * n * r /100
get p value n value and r value from user
p ===< integer
n ===> float
r ===> float

Output format ===> string format


Task2 :

Area of cone: 1/3 * pi * r ^2 * h

get r from user (float)
get height from user (int)

print output in integer format


Task3:

even / odd
postivie / negative
prime number / composite number
factorial
fibonacci series
armstrong numbe
square/ cube or power
floor div/ ceil divison
palindrome
add /sub / mul/ div
factors or multiples of a number

3 ==> 1,3
25 ===> 1,5,25
30 ==> 1,2,3,5,6,15,30

Task4:

"computer_science"

identify foraward and reverse index value for below values
i
t
_
n
m

write code for this also


October 16: 

Task1:

create a string called "computer_science"

extract:

computer
science
puter
_sci
ter_sci

Task2:

extract:

cmue
sine
t_i
c_
cpe


October 19:

Tasks:

value1 = "Information_Technology"

print(value1[-5:5]) 
print(value1[5:-5])
print(value1[5:-5:1])
print(value1[-5:5:1])
print(value1[5:-5:-1])
print(value1[-5:5:-1])
print(value1[5:-5:5])
print(value1[-5:5:-5])
print(value1[5:-5:-5])
print(value1[-5:5:5])
print(value1[-3:3]) 
print(value1[3:-3])
print(value1[3:-3:1])
print(value1[-3:3:1])
print(value1[3:-3:-1])
print(value1[-3:3:-1])
print(value1[3:-3:3])
print(value1[-3:3:-3])
print(value1[3:-3:-3])
print(value1[-3:3:3])
print(var[::1])
print(var[::2])
print(var[::3])
print(var[::-1])
print(var[::-2])
print(var[::-3])
print(var[:8:2])
print(var[:8:-2])
print(var[8::2])
print(var[8::-2])
print(var[:-6:2])
print(var[:-6:-2])
print(var[-6::2])
print(var[-6::-2])



October 22:

Task1:

https://www.hackerrank.com/challenges/python-mutations/problem

#immutable strings

a = "pothon"
index = 4
b = "*"

print(a[index])

a[index] = b

October 23:

#task1
https://www.w3schools.com/python/exercise.asp?filename=exercise_lists1

#task2

Get a string or List 
identify middle element of the string or List

"python" ==> h
"cpp" ==> p
"system ==> t
[1,2,3,4,5] ==> 3

#Task3:

what's your name
mutation
swapcase
capitalize
Hello wrold
Arithmetic operators 
python divison

October 30:

Task1:

List

#Create an empty list (two ways)
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple

Task2: Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

Task3: Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Task4:

 Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task5

Difference between list tuple set dictionary








